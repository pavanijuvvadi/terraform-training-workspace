#!/bin/bash

#
# A script to configure initialize OpenVPN configuration and to start the background processors
#
# NOTE: that this script expects to be running in an AMI generated by a Packer template.
# It also expects that the Gruntwork init-openvpn and start-openvpn-admin modules have been installed in the AMI and the
# install-openvpn module has been executed by the packer build process.

set -e

# Send the log output from this script to user-data.log, syslog, and the console
# From: https://alestic.com/2010/12/ec2-user-data-output/
exec > >(tee /var/log/user-data.log | logger -t user-data -s 2>/dev/console) 2>&1

function get_instance_id {
    curl --silent http://169.254.169.254/latest/meta-data/instance-id
}

function get_aws_region {
    curl --silent http://169.254.169.254/latest/dynamic/instance-identity/document | grep region | awk -F\" '{print $4}'
}

echo 'Attaching EIP...'
sudo aws ec2 associate-address  \
 --instance-id $(get_instance_id)  \
 --allocation-id ${eip_id}  \
 --region $(get_aws_region)  \
 --allow-reassociation

echo 'Initializing PKI and Copying OpenVPN config into place...'
sudo init-openvpn  \
 --country "${ca_country}"  \
 --state "${ca_state}"  \
 --locality "${ca_locality}"  \
 --org "${ca_org}"  \
 --org-unit "${ca_org_unit}"  \
 --email "${ca_email}"  \
 --s3-bucket-name "${backup_bucket_name}"  \
 --kms-key-id "${kms_key_id}" \
 --key-size "${key_size}" \
 --ca-expiration-days "${ca_expiration_days}" \
 --cert-expiration-days "${cert_expiration_days}" \
 --vpn-subnet "${vpn_subnet}" \
 ${routes}

echo 'Starting Certificate Request/Revoke Daemons...'
sudo run-process-requests --region "${queue_region}" --request-url "${request_queue_url}"
sudo run-process-revokes --region "${queue_region}" --revoke-url "${revocation_queue_url}"

echo 'Restarting OpenVPN...'
sudo /etc/init.d/openvpn restart

sudo touch /etc/openvpn/openvpn-init-complete
